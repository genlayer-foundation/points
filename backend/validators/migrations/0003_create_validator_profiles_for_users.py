# Generated by Django 5.2.1 on 2025-08-16 11:29

from django.db import migrations


def create_validator_profiles(apps, schema_editor):
    """
    Create an empty Validator profile for every user that has 
    contributions with a contribution type belonging to the Validator category.
    """
    User = apps.get_model('users', 'User')
    Validator = apps.get_model('validators', 'Validator')
    Category = apps.get_model('contributions', 'Category')
    Contribution = apps.get_model('contributions', 'Contribution')
    
    # Get the Validator category
    try:
        validator_category = Category.objects.get(slug='validator')
    except Category.DoesNotExist:
        print("Validator category not found. Skipping migration.")
        return
    
    # Get all contribution types for the Validator category
    validator_contribution_types = validator_category.contribution_types.all()
    
    if not validator_contribution_types.exists():
        print("No contribution types found for Validator category. Skipping migration.")
        return
    
    # Find all users with Validator contributions who don't have a Validator profile yet
    users_with_validator_contributions = User.objects.filter(
        contributions__contribution_type__in=validator_contribution_types
    ).exclude(
        validator__isnull=False  # Exclude users who already have a Validator profile
    ).distinct()
    
    # Create Validator profiles for these users
    created_count = 0
    for user in users_with_validator_contributions:
        Validator.objects.create(user=user)
        created_count += 1
    
    print(f"Created {created_count} Validator profiles for users with Validator contributions.")


def reverse_validator_profiles(apps, schema_editor):
    """
    Reverse operation: Remove Validator profiles that have no node_version set.
    This preserves Validator profiles that have been edited after creation.
    """
    Validator = apps.get_model('validators', 'Validator')
    
    # Only delete Validator profiles with no node_version (empty profiles)
    deleted_count = Validator.objects.filter(node_version__isnull=True).delete()[0]
    print(f"Removed {deleted_count} empty Validator profiles.")


class Migration(migrations.Migration):

    dependencies = [
        ('validators', '0002_alter_validator_node_version'),
        ('contributions', '0015_merge_20250816_0226'),  # Ensure Category model exists
    ]

    operations = [
        migrations.RunPython(
            create_validator_profiles,
            reverse_validator_profiles
        ),
    ]
