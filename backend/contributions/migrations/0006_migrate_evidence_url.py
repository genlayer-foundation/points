# Generated by Django 5.2.1 on 2025-05-23 14:24

from django.db import migrations


def migrate_evidence_url_to_evidence_model(apps, schema_editor):
    """
    Migrate existing evidence_url values from Contribution model to Evidence model.
    """
    Contribution = apps.get_model('contributions', 'Contribution')
    Evidence = apps.get_model('contributions', 'Evidence')
    
    # Get all contributions with non-empty evidence_url
    contributions_with_evidence = Contribution.objects.exclude(evidence_url='')
    
    # For each contribution with evidence_url, create an Evidence instance
    for contribution in contributions_with_evidence:
        if contribution.evidence_url:
            # Check if an Evidence record with this URL already exists for this contribution
            existing_evidence = Evidence.objects.filter(
                contribution=contribution,
                url=contribution.evidence_url
            ).exists()
            
            if not existing_evidence:
                Evidence.objects.create(
                    contribution=contribution,
                    description="Migrated from legacy evidence URL",
                    url=contribution.evidence_url,
                )


def reverse_migrate_evidence_url(apps, schema_editor):
    """
    This is a no-op reverse migration as we cannot reliably restore evidence_url
    from multiple Evidence records if they exist.
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('contributions', '0005_alter_contribution_evidence_url_evidence'),
    ]

    operations = [
        migrations.RunPython(
            migrate_evidence_url_to_evidence_model,
            reverse_migrate_evidence_url
        ),
    ]
